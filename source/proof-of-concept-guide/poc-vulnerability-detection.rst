.. Copyright (C) 2015, Wazuh, Inc.

.. meta::
   :description: Wazuh detects if installed applications have an unpatched CVE in the monitored system. Learn more about this in this PoC.

Vulnerability detection
=======================

Wazuh uses the Vulnerability Detection module to identify vulnerabilities in applications and operating systems running on endpoints.

This use case shows how Wazuh detects unpatched Common Vulnerabilities and Exposures (CVEs) in the monitored endpoint.

For more information on this capability, check the :doc:`vulnerability detection </user-manual/capabilities/vulnerability-detection/index>` section of the documentation.

Infrastructure
--------------

+---------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| Endpoint      | Description                                                                                                                                |
+===============+============================================================================================================================================+
| Debian 12     | The vulnerability detection module checks for vulnerabilities in the operating system and installed applications in this Linux endpoint.   |
+---------------+--------------------------------------------------------------------------------------------------------------------------------------------+

Configuration
-------------

The Vulnerability Detection module is enabled by default. You can perform the following steps on the Wazuh server to ensure that the Wazuh Vulnerability Detection module is enabled and properly configured.

#. Open the ``/var/ossec/etc/ossec.conf`` file on the Wazuh server. Check the following settings.

   -  Vulnerability Detection is enabled.

      .. code-block:: xml
         :emphasize-lines: 2

         <vulnerability-detection>
            <enabled>yes</enabled>
            <index-status>yes</index-status>
            <feed-update-interval>60m</feed-update-interval>
         </vulnerability-detection>

   -  The indexer connection is properly configured.

      .. include:: /_templates/installations/manager/configure_indexer_connection.rst

#. If you made changes to the configuration, restart the Wazuh manager.

   .. code-block:: console

      $ sudo systemctl restart wazuh-manager


Test the configuration
----------------------

.. note::

   The time it takes to detect vulnerabilities depends on the :ref:`interval <syscollector_interval>` value for Syscollector configured in the ``ossec.conf`` file. To reduce the waiting times in this test, check :doc:`System inventory capability configuration </user-manual/capabilities/system-inventory/configuration>`.

#. Install a vulnerable version of Vim such as  ``2:9.0.1378-2`` or earlier in the Debian endpoint. Wait for syscollector to run a new scan.

#. Remove the Vim package to fix the vulnerability. Wait for syscollector to run a new scan.

If the Syscollector scan finishes but the Wazuh dashboard doesn’t reflect the changes, the abuse control mechanism might be preventing the indexation of the agent's vulnerabilities. This mechanism imposes a non-configurable 30-minute time window.

.. _vuln_det_poc_alert_visualize:

Visualize the vulnerabilities
-----------------------------

You can visualize the detected vulnerabilities in the Wazuh dashboard. To see a list of active vulnerabilities, go to **Vulnerability Detection** and select **Inventory**. Add a filter in the search bar to query all active vulnerabilities for the Vim package.

-  ``package.name:vim``

   .. thumbnail:: /images/poc/vulnerabilities-inventory.png
      :title: All active vulnerabilities on Debian. Vulnerable vim package example
      :align: center
      :width: 80%

To see vulnerability alerts for the last system inventory scan, switch to **Events**. Add filters in the search bar to query vulnerability alerts for Vim.

.. note::

   Not all vulnerabilities added to or removed from the inventory generate alerts. This depends on the event source. See :ref:`vuln_det_alert_generation` for more details.

-  Active vulnerability alerts – ``data.vulnerability.package.name: vim AND data.vulnerability.status:Active``

   .. thumbnail:: /images/poc/vulnerabilities-events-new-vuln.png
      :title: Detected vulnerabilities on Debian. Vulnerable vim package example
      :align: center
      :width: 80%

-  Solved vulnerability alerts – ``data.vulnerability.package.name: vim AND data.vulnerability.status:Solved``

   .. thumbnail:: /images/poc/vulnerabilities-events-solve-vuln.png
      :title: Solved vulnerabilities on Debian. Vulnerable vim package example
      :align: center
      :width: 80%
